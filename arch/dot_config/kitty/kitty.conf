# Generall settings - don't touch it
font_family      Source Code Pro
bold_font        auto
italic_font      auto
bold_italic_font auto
font_size 12
background_opacity 0.80
linux_display_server wayland
update_check_interval 0
# wayland_titlebar_color background
startup_session none
enabled_layouts tall,grid,splits,stack
confirm_os_window_close 0
shell_integration enabled
allow_cloning yes
listen_on unix:@mykitty
#listen_on unix:/tmp/kitty      # if @mykitty wouldn't work
allow_remote_control yes

# Tab Bar
tab_bar_edge top
tab_bar_style powerline
tab_fade 0 1 1 1
active_tab_font_style   bold-italic
inactive_tab_font_style normal

# Scrollback keys (no pgup/pgdn keys on my kb)
map page_up scroll_page_up
map page_down scroll_page_down

# Scrollback
#scrollback_pager /usr/bin/nvim -c "set nonumber nolist showtabline=0 foldcolumn=0" -c "autocmd TermOpen * normal G" -c "silent write /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "
#scrollback_pager  /usr/bin/nvim -c 'setlocal ft=man  nonumber nolist showtabline=0  foldcolumn=0' -c "autocmd VimEnter * normal G"
scrollback_pager $SHELL -c 'nvim -c "lua local baleia = require(\"baleia\").setup({}); baleia.once(0)" -c "map <silent> q :qa!<CR>"'
scrollback_lines 10000
# Cursor
cursor_blink_interval 0

# Browse output of the last shell command in pager
map ctrl+shift+` launch sh -c "rm /tmp/kitty_scrollback_buffer"    # remove annoying buffer which messes up terminal output
map ctrl+shift+g show_last_command_output
#map ctrl+shift+g show_last_visited_command_output
#map ctrl+shift+g show_first_command_output_on_screen

# Paste the output of the last command
map ctrl+shift+alt+g combine : launch --stdin-source=@last_cmd_output --type=primary : paste_from_selection

# pipe the contents of the scrollback buffer to an arbitrary, command running in a new window, tab or overlay
map ctrl+shift+b launch --stdin-source=@screen_scrollback --stdin-add-formatting --type=overlay less +G -R

# pipe the contents of the scrollback buffer to nvim
map ctrl+shift+m show_scrollback

# Kitty and Vim navigation
map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j
map ctrl+k kitten pass_keys.py neighboring_window top    ctrl+k
map ctrl+h kitten pass_keys.py neighboring_window left   ctrl+h
map ctrl+l kitten pass_keys.py neighboring_window right  ctrl+l
# If it doesn't work
#map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j "^.* - nvim$"
#map ctrl+k kitten pass_keys.py neighboring_window top    ctrl+k "^.* - nvim$"
#map ctrl+h kitten pass_keys.py neighboring_window left   ctrl+h "^.* - nvim$"
#map ctrl+l kitten pass_keys.py neighboring_window right  ctrl+l "^.* - nvim$"


# Window management
map ctrl+shift+[ prvious_window
map ctrl+shift+] next_window
map ctrl+h neighboring_window left
map ctrl+l neighboring_window right
map ctrl+j neighboring_window down
map ctrl+k neighboring_window up
map ctrl+shift+enter new_os_window_with_cwd
map ctrl+shift+alt+n new_window
map ctrl+shift+n new_window_with_cwd
map ctrl+shift+w close_window
map ctrl+shift+h move_window_forward
map ctrl+shift+l move_window_backward
#map ctrl+shift+` move_window_to_top
map ctrl+shift+r start_resizing_window
map ctrl+shift+1 first_window
map ctrl+shift+2 second_window
map ctrl+shift+3 third_window
map ctrl+shift+4 fourth_window
map ctrl+shift+5 fifth_window

# Tab management
map ctrl+shift+k next_tab
map ctrl+shift+j previous_tab
#map ctrl+shift+t new_tab !neighbor
map ctrl+shift+t launch --cwd=current --type=tab
map ctrl+shift+alt+t set_tab_title
map ctrl+shift+q close_tab
map ctrl+shift+. move_tab_forward
map ctrl+shift+, move_tab_backward
map alt+1 goto_tab 1
map alt+2 goto_tab 2
map alt+3 goto_tab 3
map alt+4 goto_tab 4
map alt+5 goto_tab 5

# Layout management
map ctrl+shift+] next_layout
map ctrl+shift+[ last_used_layout
map ctrl+shift+i goto_layout grid
map ctrl+shift+o toggle_layout stack

# Select and act on visible text
map ctrl+shift+y kitten hints --type path --program -
map ctrl+shift+p>f kitten hints --type path
map ctrl+shift+p>l kitten hints --type line --program -
map ctrl+shift+p>w kitten hints --type word --program -
map ctrl+shift+p>h kitten hints --type hash --program -
map ctrl+shift+p>n kitten hints --type linenum
#map ctrl+shift+p>n kitten hints --type=linenum --linenum-action=tab nvim +{line} {path}
map ctrl+shift+p>e open_url_with_hints
map ctrl+shift+e kitten hints --type hyperlink

# Miscellaneous
map ctrl+shift+f toggle_maximized
map ctrl+shift+u kitten unicode_input
map ctrl+shift+escape kitty_shell window
map ctrl+shift+delete clear_terminal reset active
map ctrl+alt+delete clear_terminal reset all
map ctrl+shift+s clone-in-kitty --type=tab
#map ctrl+shift+s clone-in-kitty --title "I am a clone"
map ctrl+shift+z scroll_to_prompt -1
map ctrl+shift+x scroll_to_prompt 1

# broadcast to other windows in the current tab
map ctrl+shift+alt+b launch --allow-remote-control kitty +kitten broadcast --match-tab state:focused

# Highlighting words
map ctrl+shift+a create_marker
map ctrl+shift+d remove_marker
map ctrl+shift+alt+a scroll_to_mark prev
map ctrl+shift+alt+d scroll_to_mark next


######################
# SEND KEYS EXAMPLES #
######################
# 对我没有用，留下做一个参照
# Keybinds for commands - run kitty +kitten show_key to get the key escape codes you want to emulate
# All Possibly available CTRL + keys...: Q X S Y U I O . , / ; ' [ ]
#map ctrl+x send_text normal fpop\r
#map ctrl+i send_text normal fpdf\r
#map ctrl+o send_text normal fwork\r
#map ctrl+/ send_text normal ftrack\r
#map ctrl+[ send_text normal fif\r
#map ctrl+] send_text normal fifa\r
map ctrl+. send_text normal fcd\r
map ctrl+, send_text normal navi\r

# ------- unbound keys ------- #
#map some+key send_text normal fgb\r
map ctrl+; send_text normal tre '
map ctrl+' send_text normal trp '


###################
# CTRL + ... KEYS #
###################
map ctrl+q launch sh -c "pacman -Slq | fzf --multi --reverse --preview 'pacman -Si {1}' | xargs -ro sudo pacman -S"    # fpac
map ctrl+y launch sh -c "paru -Slq | fzf --multi --reverse --preview 'paru -Si {0}' | xargs -ro paru -S"                  # fparu
map ctrl+s launch sh -c "nnn -Ra"                                                                                      # nnn
map ctrl+/ launch sh -c "cliphist list | fzf | cliphist decode | wl-copy"                                              # cliphist
#map ctrl+. launch sh -c "man -k . | fzf -q "$1" --prompt='man> '  --preview $'echo {} | tr -d \'()\' | awk \'{printf "%s ", $2} {print $1}\' | xargs -r man' | tr -d '()' | awk '{printf "%s ", $2} {print $1}' | xargs -r man}"


#########################
# CTRL + ALT + ... KEYS #
#########################
### EXAMPLES ###
## Possible types: launch my_program --type=window/tab/os-window/overlay/overla-main/background/clipboard, primary
# run in new window
#map ctrl+alt+m launch sh -c "himalaya list"

# run in an selected active window
#map ctrl+alt+w launch cava @active-kitty-window-id
# replaced by the currently selected text
#map ctrl+alt+e launch cava @selection
# run in new window with the same wd
#map ctrl+alt+r launch --cwd=current cava
# run in new window in new tab
#map ctrl+alt+t launch --type=tab cava
# run multiple commands in new window
#map ctrl+alt+y launch sh -c "ls && exec zsh"
# pass the contents of the current screen and scrollback to the started process
#map ctrl+alt+u launch --stdin-source=@screen_scrollback less


###########
# SOURCES #
###########
# if kitty conf doesn't load then try removing and adding those again
include current-theme.conf
include open-actions.conf
#include ssh.conf
#include diff.conf


# BEGIN_KITTY_THEME
# Aquarium Dark
include current-theme.conf
# END_KITTY_THEME
